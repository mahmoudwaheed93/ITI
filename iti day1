{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMJNLWcMiRHQMIIy/STWHk1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mahmoudwaheed93/ITI/blob/main/iti%20day1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JnMX3EC1koQ3",
        "outputId": "da8bc787-44bd-42c1-aec3-5c97208857ed"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7 2 17 27 1.6666666666666667 1 2\n"
          ]
        }
      ],
      "source": [
        "\n",
        "num1 = 3\n",
        "num2 = 4\n",
        "num3 = 5\n",
        "\n",
        "\n",
        "a = num1 + num2\n",
        "b = num3 - num1\n",
        "c = num1 * num2 + num3\n",
        "d = num1 * (num2 + num3)\n",
        "e = num3 / num1\n",
        "f = num3 // num1\n",
        "g = num3 % num1\n",
        "\n",
        "print(a, b, c, d, e, f, g)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num1 = 3.0\n",
        "num2 = 4.0\n",
        "num3 = 5.0\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "a = num1 + num2\n",
        "b = num3 - num1\n",
        "c = num1 * num2 + num3\n",
        "d = num1 * (num2 + num3)\n",
        "e = num3 / num1\n",
        "f = num3 // num1\n",
        "g = num3 % num1\n",
        "\n",
        "print(a, b, c, d, e, f, g)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zrLdGKytnlCL",
        "outputId": "518e9a01-d8bd-432e-9813-c86de11dbea2"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "7.0 2.0 17.0 27.0 1.6666666666666667 1.0 2.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X=1\n",
        "Y=2\n",
        "Z=3\n",
        "G=4\n",
        "\n",
        "\n",
        "\n",
        "A=X + Y *Z/G\n",
        "B= Y**Z\n",
        "print(A,B)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S-VJJiwen6ro",
        "outputId": "2ded15fe-5813-4d4e-eeb2-0b425fc067af"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2.5 8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "str_a='python'\n",
        "str_b='is a'\n",
        "str_c='programming language'\n",
        "num=1000\n",
        "\n",
        "str_ab=str_a+str_b+str_c+str(num)\n",
        "str_a10 = str_a * 10\n",
        "print(str_ab)\n",
        "print(str_a10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "j_uvy-bQop-5",
        "outputId": "f82e4c07-706a-42e2-b65b-134dcf355027"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "pythonis aprogramming language1000\n",
            "pythonpythonpythonpythonpythonpythonpythonpythonpythonpython\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n=int(input('give num'))\n",
        "if n%2==0:\n",
        "    print('even')\n",
        "else:\n",
        "    print('odd')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mc_Y1DBEqbBh",
        "outputId": "66b1817f-3c7b-4f0b-d14f-8d92e77cbc14"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "give num10\n",
            "even\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "score = int(input(\"give num (0-100) \"))\n",
        "if score < 0 or score > 100:\n",
        "    print(\"error\")\n",
        "elif score >= 50:\n",
        "    print(\"Pass\")\n",
        "else:\n",
        "    print(\"Fail\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6RQcWvlGrbXw",
        "outputId": "4807d460-66ca-4216-dc11-f450365a0957"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "give num (0-100) 3\n",
            "Fail\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "a = float(input(\"a: \"))\n",
        "b = float(input(\"b: \"))\n",
        "c = float(input(\"c: \"))\n",
        "largest = max(a, b, c)\n",
        "print(\"Largest is\", largest)\n",
        "\n",
        "if a >= b and a >= c:\n",
        "    print(\"Largest (manual) is\", a)\n",
        "elif b >= a and b >= c:\n",
        "    print(\"Largest (manual) is\", b)\n",
        "else:\n",
        "    print(\"Largest (manual) is\", c)\n"
      ],
      "metadata": {
        "id": "KmXg28Pgt5JI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1, 11):\n",
        "    print(i)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Xj0Z6pRBuL0b",
        "outputId": "6e19e3f4-028d-4318-eb56-05712af88d2a"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n",
            "10\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "score=int(input(\"give dgree(0,100)\"))\n",
        "if score>=90:\n",
        "    print('A')\n",
        "elif score>=80:\n",
        "    print('B')\n",
        "elif score>=70:\n",
        "    print('C')\n",
        "elif score>=60:\n",
        "    print('D')\n",
        "else:\n",
        "    print('F')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OtwNHFhVsQGG",
        "outputId": "0748712e-2ed9-40ca-ee4c-3f8b702eeb59"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "give dgree(0,100)90\n",
            "A\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"int num \"))\n",
        "for i in range(1, 11):\n",
        "    print(f\"{n} x {i} = {n * i}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xAmfoSKjuVJK",
        "outputId": "a61dd7d6-ff4a-4735-85d0-acf110e3a41a"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "int num 9\n",
            "9 x 1 = 9\n",
            "9 x 2 = 18\n",
            "9 x 3 = 27\n",
            "9 x 4 = 36\n",
            "9 x 5 = 45\n",
            "9 x 6 = 54\n",
            "9 x 7 = 63\n",
            "9 x 8 = 72\n",
            "9 x 9 = 81\n",
            "9 x 10 = 90\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total = 0\n",
        "for x in range(2, 51, 2):\n",
        "    total += x\n",
        "print(\"Sum of even numbers from 1 to 50 is\", total)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i9MdeaW7u5iU",
        "outputId": "e1f01f00-f092-4755-a73a-a64e35325ddf"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Sum of even numbers from 1 to 50 is 650\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n = int(input(\"int num(non-negative): \"))\n",
        "if n < 0:\n",
        "    print(\"eroor\")\n",
        "else:\n",
        "    fact = 1\n",
        "    i = n\n",
        "    while i > 1:\n",
        "        fact *= i\n",
        "        i -= 1\n",
        "    print(f\"{n}! = {fact}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6JcDVICau89j",
        "outputId": "c920c613-9655-45e6-c1e7-c8e41e2640ef"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "int num(non-negative): -9\n",
            "eroor\n"
          ]
        }
      ]
    }
  ]
}